version: 2.1
aliases:
  - &workflow-name-generate "Generate client workflow"
  - &workflow-name-publish "Publish client workflow"
  - &job-name-mirror "Mirror Repository to Github"
  - &job-name-generate "Generate client"
  - &job-name-publish "Publish client"
  - &context-cloud "cloud_deployment"
  - &branch-filter-publish '/^v[0-9]+\.[0-9]+$/'
  - &image-name "europe-docker.pkg.dev/dk-gg-rgstry/base/php-cli:dev"
parameters:
  run_workflow_generate:
    default: false
    type: boolean
  openapi_url:
    type: string
    default: ""
executors:
  php-dev:
    parameters:
      image-name:
        type: string
        default: *image-name
    docker:
      - image: <<parameters.image-name>>
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_ACCOUNT
  git:
    docker:
      - image: alpine/git:latest
jobs:
  *job-name-generate :
    executor: php-dev
    working_directory: ~/build/project
    steps:
      - run:
          name: Check requirements
          command: |
            if [ -z "<<pipeline.parameters.openapi_url>>" ]; then
              echo "Missing pipeline.parameters.openapi_url"
              exit 1
            fi
      - checkout:
          name: Checkout repository
      - run:
          name: Download the new openapi.json
          command: |
            curl -s -o openapi.json <<pipeline.parameters.openapi_url>>
      - run:
          name: Check for openapi changes
          command: |
            set +e
            git diff --name-only --exit-code --quiet openapi.json
            if [ "$?" -ne 1 ]; then
              echo "No changes in openapi.json detected -> skipping client generation."
              # stop further execution of this job
              circleci-agent step halt
              exit 0
            fi
      - run:
          name: Prepare ssh config
          command: |
            mkdir -p ~/.ssh
            touch ~/.ssh/known_hosts
            ssh-keyscan -H bitbucket.org >> ~/.ssh/known_hosts
            touch ~/.ssh/bitbucket_private_key
            echo $BITBUCKET_PRIVATE_SSH_KEY | base64 -d >> ~/.ssh/bitbucket_private_key
            chmod 400 ~/.ssh/bitbucket_private_key
      - restore_cache:
          name: Restore dev vendor cache
          keys:
            - php-vendor-lib-dev-{{ checksum "composer.lock" }}
      - run:
          name: Install dev dependencies
          command: composer install --dev
      - save_cache:
          name: Save dev vendor cache
          paths:
            - vendor
          key: php-vendor-lib-dev-{{ checksum "composer.lock" }}
      - run:
          name: Generate the client
          command: |
            php vendor/bin/jane-openapi generate -c jane-openapi-configuration.php
      - run:
          name: Add changes to git commit stage
          command: |
            git add -A
      - run:
          name: Check for client changes
          command: |
            set +e
            changes=$(git diff --cached --name-only | grep -v -w "^openapi.json$")
            if [ -z "$changes" ]; then
              echo "No changes in the generated client code detected -> skipping commit."
              # stop further execution of this job
              circleci-agent step halt
              exit 0
            fi
      - run:
          name: Commit and push to approval branch
          command: |
            git config user.email $BITBUCKET_USER_EMAIL
            git config user.name $BITBUCKET_USER_NAME
            eval "$(ssh-agent -s)"
            ssh-add ~/.ssh/bitbucket_private_key
            
            APPROVAL_BRANCH_NAME="approval/${CIRCLE_BRANCH}/$(date +%Y%m%d-%H%M%S)_${CIRCLE_BUILD_NUM}"
            git checkout -b ${APPROVAL_BRANCH_NAME}
            git commit -m 'Autogenerated client update [publish]'
            git push --set-upstream origin ${APPROVAL_BRANCH_NAME}
  *job-name-mirror :
    executor: git
    steps:
      - checkout:
          name: Checkout source code
      - run:
          name: Mirror the repository to Github
          command: |
            mkdir -p ~/.ssh
            touch ~/.ssh/known_hosts
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts
            git remote add github git@github.com:datenkraft/${CIRCLE_PROJECT_REPONAME}.git
            git push github --mirror
  *job-name-publish :
    executor: git
    steps:
      - checkout:
          name: Checkout source code
      - run:
          name: Check for changes
          command: |
            lastTag=$(git describe --tags --abbrev=0)
            set +e
            # check if any commits starting with the last tag have the [publish] in their commit message  
            git log tags/${lastTag}.. --oneline --grep='\[publish\]' --exit-code
            if [ "$?" -ne 1 ]; then
              echo "No changes marked with [publish] between tags/${lastTag} and HEAD -> skipping publishing."
              # stop further execution of this job
              circleci-agent step halt
              exit 0
            fi
      - run:
          name: Prepare ssh config
          command: |
            mkdir -p ~/.ssh
            touch ~/.ssh/known_hosts
            ssh-keyscan -H bitbucket.org >> ~/.ssh/known_hosts
            touch ~/.ssh/bitbucket_private_key
            echo $BITBUCKET_PRIVATE_SSH_KEY | base64 -d >> ~/.ssh/bitbucket_private_key
            chmod 400 ~/.ssh/bitbucket_private_key
      - run:
          name: Bump git tag to next minor and push new tag
          command: |
            git config user.email $BITBUCKET_USER_EMAIL
            git config user.name $BITBUCKET_USER_NAME
            eval "$(ssh-agent -s)"
            ssh-add ~/.ssh/bitbucket_private_key
            
            lastTag=$(git describe --tags --abbrev=0)
            echo "Previous version: ${lastTag}"
            nextTag=$(echo $lastTag | awk -F. '{OFS="."; $NF+=1; print $0}')
            
            echo "Publishing with tag ${nextTag}"
            git tag -a $nextTag -m "Autogenerated client update ${nextTag}"
            git push origin tags/$nextTag
workflows:
  version: 2
  *workflow-name-generate :
    when: <<pipeline.parameters.run_workflow_generate>>
    jobs:
      - *job-name-generate :
          context: *context-cloud
          filters:
            branches:
              only: *branch-filter-publish
  *workflow-name-publish :
    jobs:
      - *job-name-publish :
          context: *context-cloud
          filters:
            branches:
              only: *branch-filter-publish
      - *job-name-mirror :
          context: *context-cloud
          requires:
            - *job-name-publish
          filters:
            branches:
              only: *branch-filter-publish
