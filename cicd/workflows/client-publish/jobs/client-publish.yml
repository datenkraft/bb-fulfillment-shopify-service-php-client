publish-client:
  stage: publish
  extends:
    - .use-service-image
  variables:
    GIT_DEPTH: 0
    GIT_STRATEGY: 'clone'
    GITLAB_REPOSITORY_URL: 'https://ci:${GITLAB_TOKEN_REPOSITORY_WRITE}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git'
  before_script:
    - git config --global --add safe.directory ${CI_PROJECT_DIR}
    - ls -al
    - env
    - git tag -l
  script:
    - git checkout ${CI_COMMIT_BRANCH}
    - '## Check for changes'
    - |
      # find last annotated tag matching the current branch
      set +e
      lastTag=$(git describe --abbrev=0 --match "${CI_COMMIT_BRANCH}.*")
      lastExitCode=$?
      set -e
      if [ $lastExitCode -ne 0 ]; then
        # found no matching tag
      
        echo "No ${CIRCLE_BRANCH}.* tag was found. Running workflow for .0 initial release."
      
        # find publish branches pointing to HEAD (except origin/HEAD and the current branch) to prevent publishing the same client to multiple versions
        set +e
        pointingBranches=$(git branch -r --format "%(refname:short)" --points-at HEAD | grep -vxF 'origin/HEAD' | grep -vxF "origin/${CI_COMMIT_BRANCH}" | grep -E '^origin/v[0-9]+\.[0-9]+$')
        lastExitCode=$?
        set -e
        if [ $lastExitCode -ne 1 ]; then
          echo "Publishing aborted because the following branches point to HEAD:"
          echo $pointingBranches
          exit 1
        fi
      
        # check if the last commit has [publish] in the commit message
        set +e
        git log -1 --format=%s | grep -qF '[publish]'
        lastExitCode=$?
        set -e
        if [ $lastExitCode -ne 0 ]; then
          echo "[publish] not found in the last commit message -> skipping publishing."
          # stop further execution of this job
          exit 0
        fi
      else
        # check if $lastTag points to HEAD, to prevent publishing the same version again
        set +e
        git tag --points-at HEAD | grep -qF $lastTag
        lastExitCode=$?
        set -e
        if [ $lastExitCode -eq 0 ]; then
          echo "tags/${lastTag} already points to HEAD -> skipping publishing."
          # stop further execution of this job
          exit 0
        fi
      
        # check if any commits starting with the last tag have [publish] in their commit message  
        set +e
        git log tags/${lastTag}.. --format=%s | grep -qF '[publish]'
        lastExitCode=$?
        set -e
        if [ $lastExitCode -ne 0 ]; then
          echo "No changes marked with [publish] between tags/${lastTag} and HEAD -> skipping publishing."
          # stop further execution of this job
          exit 0
        fi
      fi
    - '## Bump git tag to next minor and push new tag'
    - git config user.email ${GIT_USER_EMAIL}
    - git config user.name ${GIT_USER_NAME}
    - |
      lastTag=$(git describe --abbrev=0 --match "${CI_COMMIT_BRANCH}.*" || true)
      if [ -z $lastTag ]; then
        echo "No previous version"
        nextTag=$(echo "${CI_COMMIT_BRANCH}.0")
      else
        echo "Previous version: ${lastTag}"
        nextTag=$(echo $lastTag | awk -F. '{OFS="."; $NF+=1; print $0}')
      fi
    - echo "Publishing with tag ${nextTag}"
    - git tag -a ${nextTag} -m "Autogenerated client update ${nextTag}"
    - git push ${GITLAB_REPOSITORY_URL} tags/${nextTag}

mirror-to-github:
  stage: publish
  needs:
    - publish-client
  extends:
    - .mirror-to-github
